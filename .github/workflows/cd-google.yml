name: Build and Deploy to GKE

on:
  create:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1
  GKE_ZONE: southamerica-east1-a
  DEPLOYMENT_NAME: frontend-deployment
  CONTAINER_NAME: frontend

jobs:
  setup-build-publish-deploy:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    - name: Get tag name
      id: tag_name
      run: echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}

####################################################################################################################################
    # Build the frontend Docker image
    - name: Build
      run: docker build . -t "gcr.io/$PROJECT_ID/frontend:${{ steps.tag_name.outputs.SOURCE_TAG }}"
          
   # Push the frontend Docker image to Google Container Registry
    - name: Publish
      run: docker push "gcr.io/$PROJECT_ID/frontend:${{ steps.tag_name.outputs.SOURCE_TAG }}"

    - name: Deploy
      run: |-
        kubectl set image deployment $DEPLOYMENT_NAME $CONTAINER_NAME=gcr.io/$PROJECT_ID/frontend:${{ steps.tag_name.outputs.SOURCE_TAG }}
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide

      
